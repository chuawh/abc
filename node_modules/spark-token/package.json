{
  "_args": [
    [
      "git+https://github.com/marchfederico/SparkToken.git",
      "/Users/whongchu/Documents/myApp/test-dev/dev8"
    ]
  ],
  "_from": "git+https://github.com/marchfederico/SparkToken.git",
  "_id": "spark-token@1.0.0",
  "_inCache": true,
  "_location": "/spark-token",
  "_phantomChildren": {
    "aws-sign2": "0.6.0",
    "aws4": "1.4.1",
    "bl": "1.1.2",
    "caseless": "0.11.0",
    "combined-stream": "1.0.5",
    "extend": "3.0.0",
    "forever-agent": "0.6.1",
    "form-data": "1.0.0-rc4",
    "har-validator": "2.0.6",
    "hawk": "3.1.3",
    "http-signature": "1.1.1",
    "is-typedarray": "1.0.0",
    "isstream": "0.1.2",
    "json-stringify-safe": "5.0.1",
    "mime-types": "2.1.11",
    "node-uuid": "1.4.7",
    "oauth-sign": "0.8.2",
    "qs": "6.1.0",
    "stringstream": "0.0.5",
    "tough-cookie": "2.2.2",
    "tunnel-agent": "0.4.3"
  },
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/marchfederico/SparkToken/master/package.json",
      "gitUrl": "git://github.com/marchfederico/SparkToken.git",
      "httpsUrl": "git+https://github.com/marchfederico/SparkToken.git",
      "shortcut": "github:marchfederico/SparkToken",
      "ssh": "git@github.com:marchfederico/SparkToken.git",
      "sshUrl": "git+ssh://git@github.com/marchfederico/SparkToken.git",
      "type": "github"
    },
    "name": null,
    "raw": "git+https://github.com/marchfederico/SparkToken.git",
    "rawSpec": "git+https://github.com/marchfederico/SparkToken.git",
    "scope": null,
    "spec": "git+https://github.com/marchfederico/SparkToken.git",
    "type": "hosted"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+https://github.com/marchfederico/SparkToken.git#8aa645b221c27aeac84cc077bdc23fd7f1f85a95",
  "_shasum": "093c7c5d6ae1dd9c1df119cc76da15ed10b90b0e",
  "_shrinkwrap": null,
  "_spec": "git+https://github.com/marchfederico/SparkToken.git",
  "_where": "/Users/whongchu/Documents/myApp/test-dev/dev8",
  "author": "",
  "dependencies": {
    "request": "^2.67.0"
  },
  "description": "> A Cisco Spark Access Token module for Bots  This module lets you use obtain a Cisco Spark access token without any user interaction.   Useful for creating a Spark Bot.",
  "devDependencies": {},
  "gitHead": "8aa645b221c27aeac84cc077bdc23fd7f1f85a95",
  "installable": true,
  "license": "ISC",
  "main": "sparktoken.js",
  "name": "spark-token",
  "optionalDependencies": {},
  "readme": "# Cisco Spark Token\n> A Cisco Spark Access Token module for Bots \nThis module lets you use obtain a Cisco Spark access token without any user interaction.  \nUseful for creating a Spark Bot. \n\n***Note this will only work for consumer accounts.** Corporate/SSO accounts haven't been tested and will most \nlikely not work.  \n\n## Install\n\nInstall with [npm](http://github.com/isaacs/npm):\n\n```\n  npm install git+https://github.com/marchfederico/SparkToken.git\n```\n## The  Cisco Spark Access Token Library Functions\n\n*Create the Spark Token object*\n\n#### SparkToken(consumerKey, consumerSecret, callbackURL)\n```\n    var SparkToken = require('spark-token')\n    var sparkToken = new SparkToken('1111c127579545adeb55226aa8857986c6e1ab4a67ec907c39b879bf2aaaaaaaa','ffffffffd0a01af12a627e5d8772055564a5d873ba913e971c1883b7eeeeeeee','https://chester.tpcall.me/callback' )\n```\n\n\n*Grab the access token using a username and password.*\n \n#### SparkToken.initializeTokens(username,password,callback)\n\n``` javascript\n    sparkClient.initializeTokens('chester@tpcall.me', 'thisIsNotMyPassword', function(err,tokens) {\n        if (!err) {\n            console.log(\"Got the tokens!\")\n            console.dir(tokens)\n            /*   Will respond with the tokens object\n                 {\n                        access_token: 'NGRhMmd4YmMtxmM1My10M2YxLTk1NDMtZmZlZTgyNWM4YmQwNmIzZGEzYWMtYzBj',\n                        expires_in: 1209599,\n                        refresh_token: 'N2YwdWVWNWItNjYyMC00MzM1LW2yOTYtNmE2ZT50YWEwZjUwMGQ4MmQ3YTgtZGIx',\n                        refresh_token_expires_in: 7775999\n                  }\n             */\n        }\n    })\n```\n\n*The access token and refresh token will be stored in a tokens object that is a member of SparkToken*\n\n#### SparkToken.tokens\n\n``` javascript\n    {\n        access_token: 'NGRhMmd4YmMtxmM1My10M2YxLTk1NDMtZmZlZTgyNWM4YmQwNmIzZGEzYWMtYzBj',\n        expires_in: 1209599,\n        refresh_token: 'N2YwdWVWNWItNjYyMC00MzM1LW2yOTYtNmE2ZT50YWEwZjUwMGQ4MmQ3YTgtZGIx',\n        refresh_token_expires_in: 7775999\n     }\n```\n \n*Refresh the access token before it expires*\n\n#### SparkToken.refreshTokens(callback)\n\n``` javascript\n    sparkClient.refreshTokens(function(err,tokens) {\n        if (!err) {\n            console.log(\"Refreshed the access token!\")\n            console.dir(tokens)\n            /*   will respond with the tokens object\n                 {\n                        access_token: 'DGRbwmd4Ykst3mM1My10M2YxLTk1NDMtZmZlZTgyNWM4YmQwNmIzZGEzYWMtYzBj',\n                        expires_in: 1209599,\n                        refresh_token: 'N2YwdWVWNWItNjYyMC00MzM1LW2yOTYtNmE2ZT50YWEwZjUwMGQ4MmQ3YTgtZGIx',\n                        refresh_token_expires_in: 7775999\n                  }\n             */\n        }\n    })\n```\n\n",
  "readmeFilename": "Readme.md",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.0.0"
}
